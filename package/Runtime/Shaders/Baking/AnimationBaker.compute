#pragma kernel BakeTexture_Float4

StructuredBuffer<float4x4> Matrices;
RWTexture2D<float4> Texture;

[numthreads(32,1,1)]
void BakeTexture_Float4(uint3 id : SV_DispatchThreadID)
{
    const uint matrixIndex = id.x; // because each matrix takes 4 pixel
    uint count, stride;
    Matrices.GetDimensions(count, stride);
    if(matrixIndex >= count) return;
    float4x4 mat = Matrices[matrixIndex];
    uint tw, th;
    Texture.GetDimensions(tw, th);
    const uint index = matrixIndex * 4;
    [unroll]
    for(uint i = index; i < index + 4; i += 1)
    {
        int x = i % tw;
        int y = floor(i / (float)th);
        Texture[uint2(x,y)] = mat[i];
    }
}
